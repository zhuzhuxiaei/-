/*
图的存储和遍历
1．	编写一个子程序创建邻接矩阵。它从键盘输入数据。
2．	编写一个子程序，将邻接矩阵转换为邻接表。
3．	通过深度优先搜索遍历该邻接表，形成的森林用二叉链表存储。
4．	用凹入法打印森林。
 
*/
#include <stdio.h>
#include <stdlib.h>
typedef struct DA da;
struct DA{
	int *point;
	int *Node;
};
da* creatJUZHENG(int size);
int main(){
	printf("输入节点个数\n");	
	int size=0;
	scanf("%d",&size);
	fflush(stdin);
	da *ds;
	ds=creatJUZHENG(size);
}
da* creatJUZHENG(int size){
	da* ds=(da*)malloc(sizeof(da));
	ds->point=(int*)malloc(sizeof(int)*size*size);
	ds->Node=(int*)malloc(sizeof(int)*size);
	printf("下标从0行0列开始\n");
	for(int i=0;i<=size-1;i++){
		printf("输入第%d个节点的值\n");
		scanf("%c",&ds->Node);
		fflush(stdin);
	}
	//赋值0 
	for(int i=0;i<=size*size-1;i++){
		*(ds->left+i)=0;
	} 
	while(1){
		int x=0,y=0; 
		printf("输入邻接矩阵的非0坐标,如果输入完毕则输入-1 -1\n");
		scanf("%d %d",&x,&y);
		fflush(stdin);
		if(x==-1) return 0;
		*(ds->point+(x*size)+y)=1;
		 
	}
	return *ds;	
} 
changetoList(){
	
}
